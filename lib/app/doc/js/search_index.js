var search_data = {"index":{"searchIndex":["inferno","sequence","sequencebaseextension","conforms_to_datetime_format()","get_all_replies()","get_all_resources()","how_many()","new()"],"longSearchIndex":["inferno","inferno::sequence","inferno::sequence::sequencebaseextension","inferno::sequence::sequencebaseextension#conforms_to_datetime_format()","inferno::sequence::sequencebaseextension#get_all_replies()","inferno::sequence::sequencebaseextension#get_all_resources()","inferno::sequence::sequencebaseextension#how_many()","inferno::sequence::sequencebaseextension::new()"],"info":[["Inferno","","Inferno.html","",""],["Inferno::Sequence","","Inferno/Sequence.html","",""],["Inferno::Sequence::SequenceBaseExtension","","Inferno/Sequence/SequenceBaseExtension.html","","<p>Added functionality on top of Sequence Base\n"],["conforms_to_dateTime_format","Inferno::Sequence::SequenceBaseExtension","Inferno/Sequence/SequenceBaseExtension.html#method-i-conforms_to_dateTime_format","(str)","<p>Returns true if _str conforms to HL7&#39;s dateTime format, false otherwise\n"],["get_all_replies","Inferno::Sequence::SequenceBaseExtension","Inferno/Sequence/SequenceBaseExtension.html#method-i-get_all_replies","(klass)","<p>Retrieves all bundles from server when requesting every resource of type _klass\n<p>Returns array of every …\n"],["get_all_resources","Inferno::Sequence::SequenceBaseExtension","Inferno/Sequence/SequenceBaseExtension.html#method-i-get_all_resources","(klass)","<p>Calls get_all_replies with klass for server&#39;s responses Filters responses to return an array where …\n"],["how_many","Inferno::Sequence::SequenceBaseExtension","Inferno/Sequence/SequenceBaseExtension.html#method-i-how_many","(klass)","<p>Returns how many resources of type _klass are stored in server\n"],["new","Inferno::Sequence::SequenceBaseExtension","Inferno/Sequence/SequenceBaseExtension.html#method-c-new","(instance, client, disable_tls_tests = false, sequence_result = nil, metadata_only = false)","<p>initializer appeals to parent initializer\n"]]}}